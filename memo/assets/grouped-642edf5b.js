import{o as h,s as g,a as m,h as v,e as S,i as d,b as f,S as p,j as $,t as l}from"./index-6f862bfc.js";import{t as w,b as k,d as _,e as E,f as P}from"./index-3bfbb343.js";function L(e,n,s,o){return e.addEventListener(n,s,o),w(e.removeEventListener.bind(e,n,s,o))}function y(e,n){const{push:s,execute:o}=k();return[(t,a,c)=>{const u=L(e,t,a,c??n);return s(u),u},h(o)]}function M(e,n=v()){let s=0,o,t;return()=>(s++,h(()=>{s--,queueMicrotask(()=>{!s&&t&&(t(),t=o=void 0)})}),t||m(a=>o=e(t=a),n),o)}function T(e){const n=v(),s=M(e,n);return()=>g.context?m(e,n):s()}var b={passive:!0},C={x:0,y:0,isInside:!1,sourceType:null};function I(e=window,n,s={}){const{touch:o=!0,followTouch:t=!0}=s,[a,c]=y(e,b),u=r=>n({x:r.pageX,y:r.pageY,sourceType:"mouse"});if(a("mousemove",u),a("dragover",u),o){const r=i=>{i.touches.length&&n({x:i.touches[0].clientX,y:i.touches[0].clientY,sourceType:"touch"})};a("touchstart",r),t&&a("touchmove",r)}return c}function O(e=window,n,s={}){const{touch:o=!0}=s,[t,a]=y(e,b);let c=!1,u=!o;function r(i){this==="mouse"?c=i:u=i,n(c||u)}return t("mouseover",r.bind("mouse",!0)),t("mouseout",r.bind("mouse",!1)),t("mousemove",r.bind("mouse",!0),{passive:!0,once:!0}),o&&(t("touchstart",r.bind("touch",!0)),t("touchend",r.bind("touch",!1))),a}function x(e,n={}){const s={...C,...n.initialValue},[o,t]=_(s),a=c=>{I(c,t,n),O(c,t.bind(void 0,"isInside"),n)};return typeof e!="function"?a(e):S(()=>a(e())),o}x.bind(void 0,void 0,void 0);const R=l('<div><div class="ball bg-green-500"></div><p class="font-bold text-green-500 opacity-50">normal</p><p class="font-bold text-yellow-600 opacity-50">debounced</p><p class="font-bold text-cyan-500 opacity-50">throttled</p></div>',10),N=l('<div class="ball bg-yellow-600"></div>',2),A=l('<div class="ball bg-cyan-500"></div>',2),V=()=>{const e=x(),n=E([()=>e.x,()=>e.y],([o,t])=>({x:o,y:t}),200),s=P(()=>({x:e.x,y:e.y}),200);return(()=>{const o=R.cloneNode(!0),t=o.firstChild,a=t.nextSibling;return d(o,f(p,{get when(){return n()},keyed:!0,children:({x:c,y:u})=>(()=>{const r=N.cloneNode(!0);return r.style.setProperty("transform",`translate(${c}px, ${u}px)`),r})()}),a),d(o,f(p,{get when(){return s()},keyed:!0,children:({x:c,y:u})=>(()=>{const r=A.cloneNode(!0);return r.style.setProperty("transform",`translate(${c}px, ${u}px)`),r})()}),a),$(()=>t.style.setProperty("transform",`translate(${e.x}px, ${e.y}px)`)),o})()};export{V as default};
